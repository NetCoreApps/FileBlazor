@inherits AppComponentBase
@using FileBlazor.ServiceModel.Types

<AuthorizeView>
    <Authorized>
        <LocodeUpload Request="request" FilePropertyName="AppFile" OnUploadComplete="OnUploadComplete" />
        <div class="border-b border-gray-200">
  <div class="sm:flex sm:items-baseline">
    <h3 class="text-lg leading-6 font-medium text-gray-900">Collections</h3>
    <div class="mt-4 sm:mt-0 sm:ml-10">
      <nav class="-mb-px flex space-x-8">
        <!-- Current: "border-indigo-500 text-indigo-600", Default: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300" -->
        <NavLink href="@(BucketLandingPath + "/public")" ActiveClass="border-indigo-500 text-indigo-600 whitespace-nowrap pb-4 px-1 border-b-2 font-medium text-sm" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap pb-4 px-1 border-b-2 font-medium text-sm" aria-current="page"> Public </NavLink>

        <NavLink href="@(BucketLandingPath + "/team")" ActiveClass="border-indigo-500 text-indigo-600 whitespace-nowrap pb-4 px-1 border-b-2 font-medium text-sm" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap pb-4 px-1 border-b-2 font-medium text-sm"> Team </NavLink>

        <NavLink href="@(BucketLandingPath + "/private")" ActiveClass="border-indigo-500 text-indigo-600 whitespace-nowrap pb-4 px-1 border-b-2 font-medium text-sm" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap pb-4 px-1 border-b-2 font-medium text-sm"> Private </NavLink>
      </nav>
    </div>
  </div>
</div>
        <GalleryItems AppFiles="Files" SearchTerm="@(SearchTerm)"></GalleryItems>
    </Authorized>
    <Authorizing>Loading...</Authorizing>
    <NotAuthorized>
        @if(FileAccessType == ServiceModel.Types.FileAccessType.Public)
        {
            <GalleryItems AppFiles="Files" SearchTerm="@(SearchTerm)"></GalleryItems>
        }
        else
        {
            <span>Login to see @FileAccessType files.</span>
        }
    </NotAuthorized>
</AuthorizeView>



@code {
    [Parameter]
    public Func<IFileItemRequest> CreateRequest { get; set; }

    [Parameter]
    public EventCallback OnUploadComplete { get; set; }

    [Parameter]
    public List<FileItemWithFile> Files { get; set; }

    [Parameter]
    public FileAccessType? FileAccessType { get; set; }

    [Parameter]
    public string BucketLandingPath { get; set; }

    [Parameter]
    public string SearchTerm { get; set; } = "";

    private IFileItemRequest request;

    protected override async Task OnParametersSetAsync()
    {
        request = CreateRequest();
        await base.OnParametersSetAsync();
    }

}
